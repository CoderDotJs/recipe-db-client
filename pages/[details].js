import React, { useEffect, useState } from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import axios from "axios";
import Loading from "../Components/Loading/Index";
import Image from "next/image";
import { errorToast } from "../utils/toast";
import styles from "../styles/Home.module.css";
import Details from "../Components/Details/Index";

const Index = () => {
  const router = useRouter();
  const { details } = router.query;
  const id = details;
  const [loading, setLoading] = useState(true);
  const [meals, setMeals] = useState({});
  const [notFound, setNotFound] = useState(false);
  const [int, setInt] = useState([]);
  console.log("ðŸš€ ~ file: [details].js ~ line 18 ~ Index ~ int", int);

  const [msr, setMsr] = useState([]);

  const goBack = () => {
    router.back();
  };

  useEffect(() => {
    const fetchData = async () => {
      setLoading(true);
      try {
        const { data } = await axios.get(
          `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`
        );

        setMeals(data.meals[0]);
        setLoading(false);
        const meal = { ...data.meals[0] };
        const keys = Object.keys(meal);
        const a = [];
        const b = [];
        for (let i = 0; i < keys.length; i++) {
          if (keys[i].startsWith("strIngredient")) {
            a.push(meal[keys[i]]);
          }
          if (keys[i].startsWith("strMeasure")) {
            b.push(meal[keys[i]]);
          }
        }
        const c = a.filter((item) => item.trim() !== "");
        const d = b.filter((item) => item.trim() !== "");
        setInt(c);
        setMsr(d);
        if (!data.meals || data.meals.length === 0) {
          setNotFound(true);
        }
      } catch (error) {
        console.log(error);
        errorToast("Error fetching data");
        setLoading(false);
      }
    };
    return () => {
      fetchData();
    };
  }, [router]);

  if ((!details && !meals) || (details && !meals)) {
    return (
      <div>
        Recipe not found
        <button onClick={() => router.push("/")}>Back</button>
      </div>
    );
  }

  return (
    <div>
      <Head>
        <title>{meals?.strMeal ? meals.strMeal : "Loading..."}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css"
          integrity="sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g=="
          crossOrigin="anonymous"
          referrerpolicy="no-referrer"
        />
      </Head>
      <main className={styles.details}>
        {meals?.idMeal && <Details meals={meals} int={int} msr={msr} />}
        {loading && (
          <div
            style={{
              width: "100%",
              height: "100%",
            }}
          >
            <div
              style={{
                height: "100vh",
                display: "flex",
                justifyContent: "center",
                alignItems: "center",
              }}
            >
              <Loading />
            </div>
          </div>
        )}
      </main>
    </div>
  );
};

export default Index;
